
//! Autogenerated weights for pallet_smart_contract
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2022-02-23, STEPS: [50, ], REPEAT: 20, LOW RANGE: [], HIGH RANGE: []
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Interpreted, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/tfchain
// benchmark
// --chain=dev
// --steps=50
// --repeat=20
// --pallet
// pallet_smart_contract
// --extrinsic
// *
// --execution=wasm
// --heap-pages=4096
// --output=../pallets/pallet-smart-contract/src/weights.rs
// --raw


#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for pallet_smart_contract.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_smart_contract::WeightInfo for WeightInfo<T> {
	fn create_node_contract() -> Weight {
		(337_148_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(8 as Weight))
	}
	fn add_reports() -> Weight {
		(1_429_756_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
